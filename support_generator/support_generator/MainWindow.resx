<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAAd0SU1FB+IGEhMqDwO8tg0AAAAZdEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIEdJ
        TVBXgQ4XAAAEg0lEQVRYR+2WWUxcVRjH78wwlylggRSsEQouqLUxtEqMwZc21AQrttrUF2oUpTNQtrmz
        sAwMS5ntDjMw+8YwrC21pRILxlZsbYNBjEvUaoXWlERj++BLY7QxPvF57uWMZTkdZoCXJv6TX0iA+/3O
        Pd853wz1f+6rtBm88QcPKxIr2zzJbzV7UnarHCn59f7UV8zvpe/RD6fnNA6mNZ+ZzGVPfbKPKWsQ4cc2
        Jl/1DtKFGs/gk9rjF/K7xm/kWcduPm784LdH2fHbuY4J2N51HjI7zkEqex62sh9BUYO7GT+6MXmt3nY6
        SRUAkfUiUH2zkem/DumOy1Bd31GKH19fZFoHm6gKzFPqHoirDYHI+yVQvT+tSpb13K8apmUnLrO2qPWB
        /Q+rvH9ych5VECSNQyDo+ZEoXYy4+zt41nB6TNtqS8blYoumo3fbM2r3jEDVvSAPowyApH0UbfcMUfwf
        qB2bXVNwQNdnwiVjy9465zS9XI4RKruBNn+M+n2NLA/TPwtptk9B3Wx7B5eNLodUlmHxPeRhRPV9IHZO
        RbETM5BhGv8rdMyci8tHjrTJziQwPqJ0Ceg8iLUnQYh6TRQvY4d26IsRhz8Va8iRtbh3ZzCu20QhAaHC
        D7RhfPVdQEh8X8OetgHbNbtJiHVL0+4cSt3B2K8K0JuRZPeCOw8SywX+/pPEd5mBdPslkOqCxVi5EGmr
        R8D9fLnO/hlXjCRZDRGCdk/zJ58sx6C/5+jeh7HQ8QxeHk5Ji9srlnN9D60oHi20ZhCEwStk8WLQTj2n
        Cf0Cc5/H8/IqraMkmfEAhaYcqXC0cK2j9WdBELq6SIjOBnc++BGNruzAdRCi39NomhY2+kb5Bchb3UXp
        jItbAD9u14OIuxldl5HoZx5xzw9Au6YhvmMCaN1ZoJuGQVTXBxLGCy/Vu4P8ArgcbrCbxNFcvShIUPpB
        gnYzvsIGwnIrCMosIJCZQSBlgTpiAsG7BihkzB9i9d0UMNYpSkUuGi1xigCIOVGpkZctRyw1QZHK+j0A
        8Ad/SXSBkewnFM5blDq2axhGxI3ncgtRzBGHeL6SnRzoH92MlSuzT24u3qzw/k0SREKAbg/NbfcR8ptz
        5FaYvlG1ubdiFTnc1hTILSeEsQwj1O/ECG9OlZrgxWr2zpmxi49hTeTA7JWk7ZUdc0TZCkKw6WgnWYzZ
        Wa7/Y2hobBsuH106LcH8TLnjH7J0AQEivsqBtp0s5siW6eeUpuDTuGxseV3jkj2o9CIZaUChnte4QUSQ
        hsk5aroja/ftxeVij99/IuGFWtdJGn0DWiJHPZfIPZHk81lSPaj1/v241NpzrNn2VLbCdWPxAsQKH7pS
        K0871woh4iGpEZrMwfXLw6lqcZZuUXrnuTePQ5//IqmZP9kUWsSmUgNsKWMhTWa89UiF+dtdlezEIYYt
        4p/T+VYOm7XmVXUXm1TthAfQhMsqM0JujeXmrip2JK/KXFugsBwsrjHkDQdPZeJ/3/i0aTtFJS0ecwUb
        evtNY0/WG3VdKfIGq+T3S5Pkbzf3RyjqXxLBzip+IWVYAAAAAElFTkSuQmCC
</value>
  </data>
</root>